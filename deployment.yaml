apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-msteams-config
  namespace: monitoring
data:
  connectors.yaml: |
    connectors:
      - warning: https://outlook.office.com/webhook/xxxx/xxxx
      - critical: https://outlook.office.com/webhook/xxxx/xxxx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-msteams-card-template
  namespace: monitoring
data:
  card.tmpl: |
    {{ define "teams.card" }}
    {
      "@type": "MessageCard",
      "@context": "http://schema.org/extensions",
      "themeColor": "{{- if eq .Status "resolved" -}}2DC72D
                     {{- else if eq .Status "firing" -}}
                        {{- if eq .CommonLabels.severity "critical" -}}8C1A1A
                        {{- else if eq .CommonLabels.severity "warning" -}}FFA500
                        {{- else -}}808080{{- end -}}
                     {{- else -}}808080{{- end -}}",
      "summary": "{{- if eq .CommonAnnotations.summary "" -}}
                      {{- if eq .CommonAnnotations.message "" -}}
                        {{- if eq .CommonLabels.alertname "" -}}
                          Prometheus Alert
                        {{- else -}}
                          {{- .CommonLabels.alertname -}}
                        {{- end -}}
                      {{- else -}}
                        {{- .CommonAnnotations.message -}}
                      {{- end -}}
                  {{- else -}}
                      {{- .CommonAnnotations.summary -}}
                  {{- end -}}",
      "title": "Prometheus Alert ({{ .Status | title }})",
      "sections": [ {{$externalUrl := .ExternalURL}}
      {{- range $index, $alert := .Alerts }}{{- if $index }},{{- end }}
        {
          "activityTitle": "[{{ $alert.Annotations.description }}]({{ $externalUrl }})",
          "facts": [
            {{- range $key, $value := $alert.Annotations }}
            {
              {{- if ne $key "description" -}}
                "name": "{{ $key }}",
                "value": "{{ $value }}"
              {{- end -}}
            },
            {{- end -}}
            {{$c := counter}}{{ range $key, $value := $alert.Labels }}{{if call $c}},{{ end }}
            {
              "name": "{{ $key }}",
              "value": "{{ $value }}"
            }
            {{- end }}
          ],
          "markdown": true
        }
        {{- end }}
      ]
    }
    {{ end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus-msteams
    release: prometheus-msteams
  name: prometheus-msteams
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-msteams
      release: prometheus-msteams
  template:
    metadata:
      labels:
        app: prometheus-msteams
        release: prometheus-msteams
    spec:
      containers:
      - args:
        - -config-file=/etc/config/connectors.yaml
        - -template-file=/etc/template/card.tmpl
        - -debug
        env:
        - name: HTTPS_PROXY
          value: http://corporateproxy:8080
        - name: HTTP_PROXY
          value: http://corporateproxy:8080
        image: quay.io/prometheusmsteams/prometheus-msteams:v1.5.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /config
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: prometheus-msteams
        ports:
        - containerPort: 2000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /config
            port: http
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 10m
            memory: 32Mi
          requests:
            cpu: 1m
            memory: 8Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /etc/template
          name: card-template-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-msteams-config
        name: config-volume
      - configMap:
          defaultMode: 420
          name: prometheus-msteams-card-template
        name: card-template-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: prometheus-msteams
    release: prometheus-msteams
  name: prometheus-msteams
  namespace: monitoring
spec:
  ports:
  - port: 2000
    protocol: TCP
    targetPort: http
  selector:
    app: prometheus-msteams
    release: prometheus-msteams
